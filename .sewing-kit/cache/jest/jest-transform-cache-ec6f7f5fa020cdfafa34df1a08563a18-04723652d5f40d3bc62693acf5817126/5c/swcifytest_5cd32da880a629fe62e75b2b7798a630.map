{"version":3,"sources":["swcify.test.js"],"names":["trim","trimmed","require","transformSync","describe","it","code","expect","toMatch","jsc","parser","topLevelAwait","target","externalHelpers"],"mappings":";;AAAA;AACA,MAAM;AAAEA,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAoBC,OAAO,CAAC,mBAAD,CAAjC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,GAAD,CAAjC;;AAEAE,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAWH,aAAa,CAC5BF,OAAQ;AACd;AACA;AACA;AACA;AACA;AACA,KAPkC,CAA9B;AAUAM,IAAAA,MAAM,CAACP,IAAI,CAACM,IAAD,CAAL,CAAN,CAAmBE,OAAnB,CAA2BP,OAAQ;AACvC;AACA;AACA;AACA;AACA,GALI;AAMD,GAjBC,CAAF;AAmBAI,EAAAA,EAAE,CAAC,kBAAD,EAAqB,MAAM;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAWH,aAAa,CAC5BF,OAAQ;AACd;AACA;AACA;AACA,KALkC,EAM5B;AACEQ,MAAAA,GAAG,EAAE;AACHC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SADL;AAEHC,QAAAA,MAAM,EAAE,QAFL;AAGHC,QAAAA,eAAe,EAAE;AAHd;AADP,KAN4B,CAA9B;AAeAN,IAAAA,MAAM,CAACP,IAAI,CAACM,IAAD,CAAL,CAAN,CAAmBE,OAAnB,CAA2BP,OAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXI;AAYD,GA5BC,CAAF;AA6BD,CAjDO,CAAR","sourcesContent":["/* eslint-env jest */\nconst { trim, trimmed } = require(\"./tests/utilities\");\nconst { transformSync } = require(\".\");\n\ndescribe(\"swcify\", () => {\n  it(\"returns JS\", () => {\n    const { code } = transformSync(\n      trimmed`\n      import {foo} from 'bar';\n\n      export function helloWorld() {\n        console.log(\"hi \", foo);\n      }\n    `\n    );\n\n    expect(trim(code)).toMatch(trimmed`\n    import { foo } from 'bar';\n    export function helloWorld() {\n        console.log(\\\"hi \\\", foo);\n    }\n  `);\n  });\n\n  it(\"respects options\", () => {\n    const { code } = transformSync(\n      trimmed`\n      async function f() {\n      }\n      await f();\n    `,\n      {\n        jsc: {\n          parser: { topLevelAwait: true },\n          target: \"es2017\",\n          externalHelpers: true,\n        },\n      }\n    );\n\n    expect(trim(code)).toMatch(trimmed`\n    import * as swcHelpers from \\\"@swc/helpers\\\";\n    function _f() {\n    _f = swcHelpers.asyncToGenerator(function*() {\n    });\n    return _f.apply(this, arguments);\n    }\n    function f() {\n    return _f.apply(this, arguments);\n    }\n    await f();\n  `);\n  });\n});\n"]}