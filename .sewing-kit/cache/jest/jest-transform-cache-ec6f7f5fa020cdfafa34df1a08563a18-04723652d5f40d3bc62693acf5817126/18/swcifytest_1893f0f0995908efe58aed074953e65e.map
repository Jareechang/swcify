{"version":3,"sources":["swcify.test.ts"],"names":["describe","it","code","expect","toMatch","jsc","parser","topLevelAwait","target","externalHelpers"],"mappings":";;AACA;;AACA;;AAFA;AAIAA,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAW,qBACf,uBAAQ;AACd;AACA;AACA;AACA;AACA;AACA,KAPqB,CAAjB;AAUAC,IAAAA,MAAM,CAAC,qBAAKD,IAAL,CAAD,CAAN,CAAmBE,OAAnB,CAA2B,uBAAQ;AACvC;AACA;AACA;AACA;AACA,GALI;AAMD,GAjBC,CAAF;AAmBAH,EAAAA,EAAE,CAAC,kBAAD,EAAqB,MAAM;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAW,qBACf,uBAAQ;AACd;AACA;AACA;AACA,KALqB,EAMf;AACEG,MAAAA,GAAG,EAAE;AACHC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SADL;AAEHC,QAAAA,MAAM,EAAE,QAFL;AAGHC,QAAAA,eAAe,EAAE;AAHd;AADP,KANe,CAAjB;AAeAN,IAAAA,MAAM,CAAC,qBAAKD,IAAL,CAAD,CAAN,CAAmBE,OAAnB,CAA2B,uBAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXI;AAYD,GA5BC,CAAF;AA6BD,CAjDO,CAAR","sourcesContent":["/* eslint-env jest */\nimport { trim, trimmed } from \"./tests/utilities\";\nimport { transformSync } from \".\";\n\ndescribe(\"swcify\", () => {\n  it(\"returns JS\", () => {\n    const { code } = transformSync(\n      trimmed`\n      import {foo} from 'bar';\n\n      export function helloWorld() {\n        console.log(\"hi \", foo);\n      }\n    `\n    );\n\n    expect(trim(code)).toMatch(trimmed`\n    import { foo } from 'bar';\n    export function helloWorld() {\n        console.log(\\\"hi \\\", foo);\n    }\n  `);\n  });\n\n  it(\"respects options\", () => {\n    const { code } = transformSync(\n      trimmed`\n      async function f() {\n      }\n      await f();\n    `,\n      {\n        jsc: {\n          parser: { topLevelAwait: true },\n          target: \"es2017\",\n          externalHelpers: true,\n        },\n      }\n    );\n\n    expect(trim(code)).toMatch(trimmed`\n    import * as swcHelpers from \\\"@swc/helpers\\\";\n    function _f() {\n    _f = swcHelpers.asyncToGenerator(function*() {\n    });\n    return _f.apply(this, arguments);\n    }\n    function f() {\n    return _f.apply(this, arguments);\n    }\n    await f();\n  `);\n  });\n});\n"]}